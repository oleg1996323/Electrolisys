// Generated from /home/oster/Electrolisys/grammar/fundamental.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class fundamentalLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WS=1, EOL=2, UINT=3, ADD=4, SUB=5, MUL=6, DIV=7, POW=8, QUOTE=9, ASTERISK=10, 
		EXPONENT=11, FLOAT=12, ID_NUMBER=13;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
			"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "WS", "EOL", 
			"UINT", "ADD", "SUB", "MUL", "DIV", "POW", "QUOTE", "ASTERISK", "INT", 
			"EXPONENT", "FLOAT", "ID_NUMBER"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, "'+'", "'-'", "'*'", "'/'", "'^'", "'''"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "WS", "EOL", "UINT", "ADD", "SUB", "MUL", "DIV", "POW", "QUOTE", 
			"ASTERISK", "EXPONENT", "FLOAT", "ID_NUMBER"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public fundamentalLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "fundamental.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\r\u00be\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001"+
		"\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001"+
		"\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001"+
		"\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001"+
		"\f\u0001\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f"+
		"\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012"+
		"\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015"+
		"\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018"+
		"\u0001\u0019\u0001\u0019\u0001\u001a\u0004\u001a\u0087\b\u001a\u000b\u001a"+
		"\f\u001a\u0088\u0001\u001a\u0001\u001a\u0001\u001b\u0003\u001b\u008e\b"+
		"\u001b\u0001\u001b\u0001\u001b\u0001\u001c\u0004\u001c\u0093\b\u001c\u000b"+
		"\u001c\f\u001c\u0094\u0001\u001c\u0003\u001c\u0098\b\u001c\u0001\u001d"+
		"\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0001 \u0001"+
		" \u0001!\u0001!\u0001\"\u0001\"\u0001#\u0001#\u0004#\u00a8\b#\u000b#\f"+
		"#\u00a9\u0001$\u0003$\u00ad\b$\u0001$\u0001$\u0001%\u0001%\u0001%\u0001"+
		"&\u0001&\u0001&\u0001&\u0003&\u00b8\b&\u0001\'\u0004\'\u00bb\b\'\u000b"+
		"\'\f\'\u00bc\u0000\u0000(\u0001\u0000\u0003\u0000\u0005\u0000\u0007\u0000"+
		"\t\u0000\u000b\u0000\r\u0000\u000f\u0000\u0011\u0000\u0013\u0000\u0015"+
		"\u0000\u0017\u0000\u0019\u0000\u001b\u0000\u001d\u0000\u001f\u0000!\u0000"+
		"#\u0000%\u0000\'\u0000)\u0000+\u0000-\u0000/\u00001\u00003\u00005\u0001"+
		"7\u00029\u0003;\u0004=\u0005?\u0006A\u0007C\bE\tG\nI\u0000K\u000bM\fO"+
		"\r\u0001\u0000\u001d\u0002\u0000AAaa\u0002\u0000BBbb\u0002\u0000CCcc\u0002"+
		"\u0000DDdd\u0002\u0000EEee\u0002\u0000FFff\u0002\u0000GGgg\u0002\u0000"+
		"HHhh\u0002\u0000IIii\u0002\u0000JJjj\u0002\u0000KKkk\u0002\u0000LLll\u0002"+
		"\u0000MMmm\u0002\u0000NNnn\u0002\u0000OOoo\u0002\u0000PPpp\u0002\u0000"+
		"QQqq\u0002\u0000RRrr\u0002\u0000SSss\u0002\u0000TTtt\u0002\u0000UUuu\u0002"+
		"\u0000VVvv\u0002\u0000WWww\u0002\u0000XXxx\u0002\u0000YYyy\u0002\u0000"+
		"ZZzz\u0002\u0000\t\t  \u0001\u000009\u0002\u0000++--\u00aa\u00005\u0001"+
		"\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000"+
		"\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000"+
		"?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001"+
		"\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000"+
		"\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M\u0001\u0000\u0000\u0000\u0000"+
		"O\u0001\u0000\u0000\u0000\u0001Q\u0001\u0000\u0000\u0000\u0003S\u0001"+
		"\u0000\u0000\u0000\u0005U\u0001\u0000\u0000\u0000\u0007W\u0001\u0000\u0000"+
		"\u0000\tY\u0001\u0000\u0000\u0000\u000b[\u0001\u0000\u0000\u0000\r]\u0001"+
		"\u0000\u0000\u0000\u000f_\u0001\u0000\u0000\u0000\u0011a\u0001\u0000\u0000"+
		"\u0000\u0013c\u0001\u0000\u0000\u0000\u0015e\u0001\u0000\u0000\u0000\u0017"+
		"g\u0001\u0000\u0000\u0000\u0019i\u0001\u0000\u0000\u0000\u001bk\u0001"+
		"\u0000\u0000\u0000\u001dm\u0001\u0000\u0000\u0000\u001fo\u0001\u0000\u0000"+
		"\u0000!q\u0001\u0000\u0000\u0000#s\u0001\u0000\u0000\u0000%u\u0001\u0000"+
		"\u0000\u0000\'w\u0001\u0000\u0000\u0000)y\u0001\u0000\u0000\u0000+{\u0001"+
		"\u0000\u0000\u0000-}\u0001\u0000\u0000\u0000/\u007f\u0001\u0000\u0000"+
		"\u00001\u0081\u0001\u0000\u0000\u00003\u0083\u0001\u0000\u0000\u00005"+
		"\u0086\u0001\u0000\u0000\u00007\u008d\u0001\u0000\u0000\u00009\u0092\u0001"+
		"\u0000\u0000\u0000;\u0099\u0001\u0000\u0000\u0000=\u009b\u0001\u0000\u0000"+
		"\u0000?\u009d\u0001\u0000\u0000\u0000A\u009f\u0001\u0000\u0000\u0000C"+
		"\u00a1\u0001\u0000\u0000\u0000E\u00a3\u0001\u0000\u0000\u0000G\u00a5\u0001"+
		"\u0000\u0000\u0000I\u00ac\u0001\u0000\u0000\u0000K\u00b0\u0001\u0000\u0000"+
		"\u0000M\u00b3\u0001\u0000\u0000\u0000O\u00ba\u0001\u0000\u0000\u0000Q"+
		"R\u0007\u0000\u0000\u0000R\u0002\u0001\u0000\u0000\u0000ST\u0007\u0001"+
		"\u0000\u0000T\u0004\u0001\u0000\u0000\u0000UV\u0007\u0002\u0000\u0000"+
		"V\u0006\u0001\u0000\u0000\u0000WX\u0007\u0003\u0000\u0000X\b\u0001\u0000"+
		"\u0000\u0000YZ\u0007\u0004\u0000\u0000Z\n\u0001\u0000\u0000\u0000[\\\u0007"+
		"\u0005\u0000\u0000\\\f\u0001\u0000\u0000\u0000]^\u0007\u0006\u0000\u0000"+
		"^\u000e\u0001\u0000\u0000\u0000_`\u0007\u0007\u0000\u0000`\u0010\u0001"+
		"\u0000\u0000\u0000ab\u0007\b\u0000\u0000b\u0012\u0001\u0000\u0000\u0000"+
		"cd\u0007\t\u0000\u0000d\u0014\u0001\u0000\u0000\u0000ef\u0007\n\u0000"+
		"\u0000f\u0016\u0001\u0000\u0000\u0000gh\u0007\u000b\u0000\u0000h\u0018"+
		"\u0001\u0000\u0000\u0000ij\u0007\f\u0000\u0000j\u001a\u0001\u0000\u0000"+
		"\u0000kl\u0007\r\u0000\u0000l\u001c\u0001\u0000\u0000\u0000mn\u0007\u000e"+
		"\u0000\u0000n\u001e\u0001\u0000\u0000\u0000op\u0007\u000f\u0000\u0000"+
		"p \u0001\u0000\u0000\u0000qr\u0007\u0010\u0000\u0000r\"\u0001\u0000\u0000"+
		"\u0000st\u0007\u0011\u0000\u0000t$\u0001\u0000\u0000\u0000uv\u0007\u0012"+
		"\u0000\u0000v&\u0001\u0000\u0000\u0000wx\u0007\u0013\u0000\u0000x(\u0001"+
		"\u0000\u0000\u0000yz\u0007\u0014\u0000\u0000z*\u0001\u0000\u0000\u0000"+
		"{|\u0007\u0015\u0000\u0000|,\u0001\u0000\u0000\u0000}~\u0007\u0016\u0000"+
		"\u0000~.\u0001\u0000\u0000\u0000\u007f\u0080\u0007\u0017\u0000\u0000\u0080"+
		"0\u0001\u0000\u0000\u0000\u0081\u0082\u0007\u0018\u0000\u0000\u00822\u0001"+
		"\u0000\u0000\u0000\u0083\u0084\u0007\u0019\u0000\u0000\u00844\u0001\u0000"+
		"\u0000\u0000\u0085\u0087\u0007\u001a\u0000\u0000\u0086\u0085\u0001\u0000"+
		"\u0000\u0000\u0087\u0088\u0001\u0000\u0000\u0000\u0088\u0086\u0001\u0000"+
		"\u0000\u0000\u0088\u0089\u0001\u0000\u0000\u0000\u0089\u008a\u0001\u0000"+
		"\u0000\u0000\u008a\u008b\u0006\u001a\u0000\u0000\u008b6\u0001\u0000\u0000"+
		"\u0000\u008c\u008e\u0005\r\u0000\u0000\u008d\u008c\u0001\u0000\u0000\u0000"+
		"\u008d\u008e\u0001\u0000\u0000\u0000\u008e\u008f\u0001\u0000\u0000\u0000"+
		"\u008f\u0090\u0005\n\u0000\u0000\u00908\u0001\u0000\u0000\u0000\u0091"+
		"\u0093\u0007\u001b\u0000\u0000\u0092\u0091\u0001\u0000\u0000\u0000\u0093"+
		"\u0094\u0001\u0000\u0000\u0000\u0094\u0092\u0001\u0000\u0000\u0000\u0094"+
		"\u0095\u0001\u0000\u0000\u0000\u0095\u0097\u0001\u0000\u0000\u0000\u0096"+
		"\u0098\u0003K%\u0000\u0097\u0096\u0001\u0000\u0000\u0000\u0097\u0098\u0001"+
		"\u0000\u0000\u0000\u0098:\u0001\u0000\u0000\u0000\u0099\u009a\u0005+\u0000"+
		"\u0000\u009a<\u0001\u0000\u0000\u0000\u009b\u009c\u0005-\u0000\u0000\u009c"+
		">\u0001\u0000\u0000\u0000\u009d\u009e\u0005*\u0000\u0000\u009e@\u0001"+
		"\u0000\u0000\u0000\u009f\u00a0\u0005/\u0000\u0000\u00a0B\u0001\u0000\u0000"+
		"\u0000\u00a1\u00a2\u0005^\u0000\u0000\u00a2D\u0001\u0000\u0000\u0000\u00a3"+
		"\u00a4\u0005\'\u0000\u0000\u00a4F\u0001\u0000\u0000\u0000\u00a5\u00a7"+
		"\u0005^\u0000\u0000\u00a6\u00a8\u0005*\u0000\u0000\u00a7\u00a6\u0001\u0000"+
		"\u0000\u0000\u00a8\u00a9\u0001\u0000\u0000\u0000\u00a9\u00a7\u0001\u0000"+
		"\u0000\u0000\u00a9\u00aa\u0001\u0000\u0000\u0000\u00aaH\u0001\u0000\u0000"+
		"\u0000\u00ab\u00ad\u0007\u001c\u0000\u0000\u00ac\u00ab\u0001\u0000\u0000"+
		"\u0000\u00ac\u00ad\u0001\u0000\u0000\u0000\u00ad\u00ae\u0001\u0000\u0000"+
		"\u0000\u00ae\u00af\u00039\u001c\u0000\u00afJ\u0001\u0000\u0000\u0000\u00b0"+
		"\u00b1\u0007\u0004\u0000\u0000\u00b1\u00b2\u0003I$\u0000\u00b2L\u0001"+
		"\u0000\u0000\u0000\u00b3\u00b4\u0003I$\u0000\u00b4\u00b5\u0005.\u0000"+
		"\u0000\u00b5\u00b7\u00039\u001c\u0000\u00b6\u00b8\u0003K%\u0000\u00b7"+
		"\u00b6\u0001\u0000\u0000\u0000\u00b7\u00b8\u0001\u0000\u0000\u0000\u00b8"+
		"N\u0001\u0000\u0000\u0000\u00b9\u00bb\u0007\u001b\u0000\u0000\u00ba\u00b9"+
		"\u0001\u0000\u0000\u0000\u00bb\u00bc\u0001\u0000\u0000\u0000\u00bc\u00ba"+
		"\u0001\u0000\u0000\u0000\u00bc\u00bd\u0001\u0000\u0000\u0000\u00bdP\u0001"+
		"\u0000\u0000\u0000\t\u0000\u0088\u008d\u0094\u0097\u00a9\u00ac\u00b7\u00bc"+
		"\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}
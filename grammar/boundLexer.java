// Generated from bound.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class boundLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, SUMPRODUCT=6, LN=7, LG=8, LOG_X=9, 
		EXP=10, SQRT=11, ADD=12, SUB=13, MUL=14, DIV=15, POW=16, STRING=17, VARIABLE=18, 
		VARIABLE_RANGE=19, WS=20, EOL=21, NUMBER=22, CONSTANTS=23, PI=24;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "SUMPRODUCT", "LN", "LG", "LOG_X", 
			"EXP", "SQRT", "ADD", "SUB", "MUL", "DIV", "POW", "STRING", "VARIABLE", 
			"VARIABLE_RANGE", "WS", "EOL", "INT", "UINT", "EXPONENT", "FLOAT", "NUMBER", 
			"CONSTANTS", "PI"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'('", "')'", "'['", "','", "']'", "'sumproduct'", "'Ln'", "'Lg'", 
			"'Log'", "'Exp'", "'Sqrt'", "'+'", "'-'", "'*'", "'/'", "'^'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, "SUMPRODUCT", "LN", "LG", "LOG_X", 
			"EXP", "SQRT", "ADD", "SUB", "MUL", "DIV", "POW", "STRING", "VARIABLE", 
			"VARIABLE_RANGE", "WS", "EOL", "NUMBER", "CONSTANTS", "PI"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public boundLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "bound.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0018\u00cf\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0002\u001b\u0007\u001b\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001"+
		"\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001"+
		"\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001"+
		"\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010"+
		"\u0004\u0010n\b\u0010\u000b\u0010\f\u0010o\u0001\u0010\u0001\u0010\u0001"+
		"\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0004\u0011x\b\u0011\u000b"+
		"\u0011\f\u0011y\u0001\u0011\u0005\u0011}\b\u0011\n\u0011\f\u0011\u0080"+
		"\t\u0011\u0003\u0011\u0082\b\u0011\u0001\u0011\u0001\u0011\u0001\u0011"+
		"\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0004\u0012\u008b\b\u0012"+
		"\u000b\u0012\f\u0012\u008c\u0001\u0012\u0005\u0012\u0090\b\u0012\n\u0012"+
		"\f\u0012\u0093\t\u0012\u0003\u0012\u0095\b\u0012\u0001\u0012\u0001\u0012"+
		"\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0013"+
		"\u0004\u0013\u009f\b\u0013\u000b\u0013\f\u0013\u00a0\u0001\u0013\u0001"+
		"\u0013\u0001\u0014\u0003\u0014\u00a6\b\u0014\u0001\u0014\u0001\u0014\u0001"+
		"\u0015\u0003\u0015\u00ab\b\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0004"+
		"\u0016\u00b0\b\u0016\u000b\u0016\f\u0016\u00b1\u0001\u0017\u0001\u0017"+
		"\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0003\u0018"+
		"\u00bb\b\u0018\u0001\u0019\u0001\u0019\u0003\u0019\u00bf\b\u0019\u0001"+
		"\u0019\u0003\u0019\u00c2\b\u0019\u0001\u001a\u0001\u001a\u0001\u001b\u0001"+
		"\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001"+
		"\u001b\u0003\u001b\u00ce\b\u001b\u0000\u0000\u001c\u0001\u0001\u0003\u0002"+
		"\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013"+
		"\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012%\u0013\'\u0014)\u0015+\u0000-\u0000/\u00001\u00003\u00165\u0017"+
		"7\u0018\u0001\u0000\u0006\u0007\u0000 !,,..0;??AZaz\u0004\u0000\'\'**"+
		"AZaz\u0001\u000009\u0002\u0000\t\t  \u0002\u0000++--\u0002\u0000EEee\u00da"+
		"\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000"+
		"\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000"+
		"\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000"+
		"\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011"+
		"\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015"+
		"\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019"+
		"\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d"+
		"\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001"+
		"\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000"+
		"\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000"+
		"\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007"+
		"\u0001\u0000\u0000\u0000\u00019\u0001\u0000\u0000\u0000\u0003;\u0001\u0000"+
		"\u0000\u0000\u0005=\u0001\u0000\u0000\u0000\u0007?\u0001\u0000\u0000\u0000"+
		"\tA\u0001\u0000\u0000\u0000\u000bC\u0001\u0000\u0000\u0000\rN\u0001\u0000"+
		"\u0000\u0000\u000fQ\u0001\u0000\u0000\u0000\u0011T\u0001\u0000\u0000\u0000"+
		"\u0013X\u0001\u0000\u0000\u0000\u0015\\\u0001\u0000\u0000\u0000\u0017"+
		"a\u0001\u0000\u0000\u0000\u0019c\u0001\u0000\u0000\u0000\u001be\u0001"+
		"\u0000\u0000\u0000\u001dg\u0001\u0000\u0000\u0000\u001fi\u0001\u0000\u0000"+
		"\u0000!k\u0001\u0000\u0000\u0000#s\u0001\u0000\u0000\u0000%\u0086\u0001"+
		"\u0000\u0000\u0000\'\u009e\u0001\u0000\u0000\u0000)\u00a5\u0001\u0000"+
		"\u0000\u0000+\u00aa\u0001\u0000\u0000\u0000-\u00af\u0001\u0000\u0000\u0000"+
		"/\u00b3\u0001\u0000\u0000\u00001\u00b6\u0001\u0000\u0000\u00003\u00be"+
		"\u0001\u0000\u0000\u00005\u00c3\u0001\u0000\u0000\u00007\u00cd\u0001\u0000"+
		"\u0000\u00009:\u0005(\u0000\u0000:\u0002\u0001\u0000\u0000\u0000;<\u0005"+
		")\u0000\u0000<\u0004\u0001\u0000\u0000\u0000=>\u0005[\u0000\u0000>\u0006"+
		"\u0001\u0000\u0000\u0000?@\u0005,\u0000\u0000@\b\u0001\u0000\u0000\u0000"+
		"AB\u0005]\u0000\u0000B\n\u0001\u0000\u0000\u0000CD\u0005s\u0000\u0000"+
		"DE\u0005u\u0000\u0000EF\u0005m\u0000\u0000FG\u0005p\u0000\u0000GH\u0005"+
		"r\u0000\u0000HI\u0005o\u0000\u0000IJ\u0005d\u0000\u0000JK\u0005u\u0000"+
		"\u0000KL\u0005c\u0000\u0000LM\u0005t\u0000\u0000M\f\u0001\u0000\u0000"+
		"\u0000NO\u0005L\u0000\u0000OP\u0005n\u0000\u0000P\u000e\u0001\u0000\u0000"+
		"\u0000QR\u0005L\u0000\u0000RS\u0005g\u0000\u0000S\u0010\u0001\u0000\u0000"+
		"\u0000TU\u0005L\u0000\u0000UV\u0005o\u0000\u0000VW\u0005g\u0000\u0000"+
		"W\u0012\u0001\u0000\u0000\u0000XY\u0005E\u0000\u0000YZ\u0005x\u0000\u0000"+
		"Z[\u0005p\u0000\u0000[\u0014\u0001\u0000\u0000\u0000\\]\u0005S\u0000\u0000"+
		"]^\u0005q\u0000\u0000^_\u0005r\u0000\u0000_`\u0005t\u0000\u0000`\u0016"+
		"\u0001\u0000\u0000\u0000ab\u0005+\u0000\u0000b\u0018\u0001\u0000\u0000"+
		"\u0000cd\u0005-\u0000\u0000d\u001a\u0001\u0000\u0000\u0000ef\u0005*\u0000"+
		"\u0000f\u001c\u0001\u0000\u0000\u0000gh\u0005/\u0000\u0000h\u001e\u0001"+
		"\u0000\u0000\u0000ij\u0005^\u0000\u0000j \u0001\u0000\u0000\u0000km\u0005"+
		"\"\u0000\u0000ln\u0007\u0000\u0000\u0000ml\u0001\u0000\u0000\u0000no\u0001"+
		"\u0000\u0000\u0000om\u0001\u0000\u0000\u0000op\u0001\u0000\u0000\u0000"+
		"pq\u0001\u0000\u0000\u0000qr\u0005\"\u0000\u0000r\"\u0001\u0000\u0000"+
		"\u0000st\u0005_\u0000\u0000tu\u0005_\u0000\u0000uw\u0001\u0000\u0000\u0000"+
		"vx\u0007\u0001\u0000\u0000wv\u0001\u0000\u0000\u0000xy\u0001\u0000\u0000"+
		"\u0000yw\u0001\u0000\u0000\u0000yz\u0001\u0000\u0000\u0000z\u0081\u0001"+
		"\u0000\u0000\u0000{}\u0007\u0002\u0000\u0000|{\u0001\u0000\u0000\u0000"+
		"}\u0080\u0001\u0000\u0000\u0000~|\u0001\u0000\u0000\u0000~\u007f\u0001"+
		"\u0000\u0000\u0000\u007f\u0082\u0001\u0000\u0000\u0000\u0080~\u0001\u0000"+
		"\u0000\u0000\u0081~\u0001\u0000\u0000\u0000\u0081\u0082\u0001\u0000\u0000"+
		"\u0000\u0082\u0083\u0001\u0000\u0000\u0000\u0083\u0084\u0005_\u0000\u0000"+
		"\u0084\u0085\u0005_\u0000\u0000\u0085$\u0001\u0000\u0000\u0000\u0086\u0087"+
		"\u0005_\u0000\u0000\u0087\u0088\u0005_\u0000\u0000\u0088\u008a\u0001\u0000"+
		"\u0000\u0000\u0089\u008b\u0007\u0001\u0000\u0000\u008a\u0089\u0001\u0000"+
		"\u0000\u0000\u008b\u008c\u0001\u0000\u0000\u0000\u008c\u008a\u0001\u0000"+
		"\u0000\u0000\u008c\u008d\u0001\u0000\u0000\u0000\u008d\u0094\u0001\u0000"+
		"\u0000\u0000\u008e\u0090\u0007\u0002\u0000\u0000\u008f\u008e\u0001\u0000"+
		"\u0000\u0000\u0090\u0093\u0001\u0000\u0000\u0000\u0091\u008f\u0001\u0000"+
		"\u0000\u0000\u0091\u0092\u0001\u0000\u0000\u0000\u0092\u0095\u0001\u0000"+
		"\u0000\u0000\u0093\u0091\u0001\u0000\u0000\u0000\u0094\u0091\u0001\u0000"+
		"\u0000\u0000\u0094\u0095\u0001\u0000\u0000\u0000\u0095\u0096\u0001\u0000"+
		"\u0000\u0000\u0096\u0097\u0005_\u0000\u0000\u0097\u0098\u0005a\u0000\u0000"+
		"\u0098\u0099\u0005r\u0000\u0000\u0099\u009a\u0005r\u0000\u0000\u009a\u009b"+
		"\u0005_\u0000\u0000\u009b\u009c\u0005_\u0000\u0000\u009c&\u0001\u0000"+
		"\u0000\u0000\u009d\u009f\u0007\u0003\u0000\u0000\u009e\u009d\u0001\u0000"+
		"\u0000\u0000\u009f\u00a0\u0001\u0000\u0000\u0000\u00a0\u009e\u0001\u0000"+
		"\u0000\u0000\u00a0\u00a1\u0001\u0000\u0000\u0000\u00a1\u00a2\u0001\u0000"+
		"\u0000\u0000\u00a2\u00a3\u0006\u0013\u0000\u0000\u00a3(\u0001\u0000\u0000"+
		"\u0000\u00a4\u00a6\u0005\r\u0000\u0000\u00a5\u00a4\u0001\u0000\u0000\u0000"+
		"\u00a5\u00a6\u0001\u0000\u0000\u0000\u00a6\u00a7\u0001\u0000\u0000\u0000"+
		"\u00a7\u00a8\u0005\n\u0000\u0000\u00a8*\u0001\u0000\u0000\u0000\u00a9"+
		"\u00ab\u0007\u0004\u0000\u0000\u00aa\u00a9\u0001\u0000\u0000\u0000\u00aa"+
		"\u00ab\u0001\u0000\u0000\u0000\u00ab\u00ac\u0001\u0000\u0000\u0000\u00ac"+
		"\u00ad\u0003-\u0016\u0000\u00ad,\u0001\u0000\u0000\u0000\u00ae\u00b0\u0007"+
		"\u0002\u0000\u0000\u00af\u00ae\u0001\u0000\u0000\u0000\u00b0\u00b1\u0001"+
		"\u0000\u0000\u0000\u00b1\u00af\u0001\u0000\u0000\u0000\u00b1\u00b2\u0001"+
		"\u0000\u0000\u0000\u00b2.\u0001\u0000\u0000\u0000\u00b3\u00b4\u0007\u0005"+
		"\u0000\u0000\u00b4\u00b5\u0003+\u0015\u0000\u00b50\u0001\u0000\u0000\u0000"+
		"\u00b6\u00b7\u0003-\u0016\u0000\u00b7\u00b8\u0005.\u0000\u0000\u00b8\u00ba"+
		"\u0003-\u0016\u0000\u00b9\u00bb\u0003/\u0017\u0000\u00ba\u00b9\u0001\u0000"+
		"\u0000\u0000\u00ba\u00bb\u0001\u0000\u0000\u0000\u00bb2\u0001\u0000\u0000"+
		"\u0000\u00bc\u00bf\u0003-\u0016\u0000\u00bd\u00bf\u00031\u0018\u0000\u00be"+
		"\u00bc\u0001\u0000\u0000\u0000\u00be\u00bd\u0001\u0000\u0000\u0000\u00bf"+
		"\u00c1\u0001\u0000\u0000\u0000\u00c0\u00c2\u0003/\u0017\u0000\u00c1\u00c0"+
		"\u0001\u0000\u0000\u0000\u00c1\u00c2\u0001\u0000\u0000\u0000\u00c24\u0001"+
		"\u0000\u0000\u0000\u00c3\u00c4\u00037\u001b\u0000\u00c46\u0001\u0000\u0000"+
		"\u0000\u00c5\u00c6\u0005P\u0000\u0000\u00c6\u00ce\u0005i\u0000\u0000\u00c7"+
		"\u00c8\u0005P\u0000\u0000\u00c8\u00ce\u0005I\u0000\u0000\u00c9\u00ca\u0005"+
		"p\u0000\u0000\u00ca\u00cb\u0005i\u0000\u0000\u00cb\u00cc\u0001\u0000\u0000"+
		"\u0000\u00cc\u00ce\u0003\'\u0013\u0000\u00cd\u00c5\u0001\u0000\u0000\u0000"+
		"\u00cd\u00c7\u0001\u0000\u0000\u0000\u00cd\u00c9\u0001\u0000\u0000\u0000"+
		"\u00ce8\u0001\u0000\u0000\u0000\u0010\u0000oy~\u0081\u008c\u0091\u0094"+
		"\u00a0\u00a5\u00aa\u00b1\u00ba\u00be\u00c1\u00cd\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}